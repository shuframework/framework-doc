
对于每个语言特性和API,不仅介绍其概念和用法，还分析了为什么要有这个概念，实现原理是什么，背后的思维逻辑是什么;对于类库，分析了大量源码，使读者不仅知其然，还知其所以然，以透彻理解相关知识点。
帮助读者更好地理解和应用高层的系统程序与框架。

JDK主要包含了三部分：
	第一部分就是Java运行时环境，这其实就是JVM
	第二部分就是Java的基础类库，这个类库的数量还是非常可观的。
	第三部分就是Java的开发工具，它们都是辅助你更好的使用Java的利器。如jmap、jconsole、jstack、jvisualvm

=============== 什么才是Java的基础知识 ===============	
	
提高自己水平的方法很简单，就是把大部分时间去了解实现原理，了解思想，让自己的知识串起来，形成体系。
1. 学习jdk api 
2. jdk 源码基础 【读源码的顺序和要求】
	设计模式	自我实现一遍
	数据结构  	自我实现一遍
	多线程juc	全部会用，且底层原理要熟
	ThreadLocal 的用法和原理
	
https://blog.csdn.net/fygu18/article/details/80276406


=============== 常见问题 ===============
1.1 java数据结构
	ArrayList  LinkedList
	HashMap  LinkedHashMap  TreeMap	
	
1.2 Java并发包当中的类，它们都有哪些作用，以及它们的实现原理，这些类就是java.concurrent包下面的
	并发的数据结构  CopyOnWriteArrayList  ConcurrentHashMap
	CountDownLatch
	
	NIO模型要熟悉，特别是其中的selector一定要非常清楚它的职责和实现原理。其实NIO的核心是IO线程池，一定要记住这个关键点。	
	IO包的设计模式（装饰器模式），为什么要这样设计？有没有更好的设计？

2.1 Java的虚拟机的内容。这部分主要包括三部分，GC、类加载机制，以及内存。
一个GC部分简单的连环炮。面试官可以先问你什么时候一个对象会被GC？接着继续问你为什么要在这种时候对象才会被GC？接着继续问你GC策略都有哪些分类？你如果说出来了，继续问你这些策略分别都有什么优劣势？都适用于什么场景？你继续说出来了以后，给你举个实际的场景，让你选择一个GC策略？你如果选出来了，继续问你，为什么要选择这个策略？
下面是关于类加载机制的简单连环炮。首先肯定是先问你Java的类加载器都有哪些？回答了这些以后，可能会问你每个类加载器都加载哪些类？说完以后，可能会问你这些类加载之间的父子关系是怎样的？你在回答的时候可能会提到双亲委派模型，那么可以继续问你什么是双亲委派模型？你解释完了以后，可能会继续问你，为什么Java的类加载器要使用双亲委派模型？你回答完以后，可能会继续问你如何自定义自己的类加载器，自己的类加载器和Java自带的类加载器关系如何处理？
再来一个关于内存的连环炮。首先肯定就是问你内存分为哪几部分，这些部分分别都存储哪些数据？然后继续问你一个对象从创建到销毁都是怎么在这些部分里存活和转移的？接着可能会问你，内存的哪些部分会参与GC的回收？完事以后，可能还会问你Java的内存模型是怎么设计的？你回答了以后，还会继续问你为什么要这么设计？问完以后，还可能会让你结合内存模型的设计谈谈validate关键字的作用？你在谈的时候，肯定会提到可见性，那么接着可见性这三个字，还可以继续问你并发的内容。

链接：https://www.jianshu.com/p/e3d9da7da1e7

	
2.2 使用工具尝试解决以下问题，并写下总结
    当一个Java程序响应很慢时如何查找问题
    当一个Java程序频繁FullGC时如何解决问题，如何查看垃圾回收日志
    当一个Java应用发生OutOfMemory时该如何解决，年轻代、年老代、永久代解决办法不同，导致原因也不同


实际上接口和抽象类的选择不是随心所欲的。要理解接口和抽象类的选择原则，有两个概念很重要：对象的行为和对象的实现。
