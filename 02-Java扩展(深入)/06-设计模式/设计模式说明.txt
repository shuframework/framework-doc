
看懂了设计模式，但是实际开发中不知道怎么运用;
	造成原因：只是了解级别，还是理解不到位，自己感觉懂了，根本还没入门。

循序渐进地学习每个设计模式：读完一遍是不够的，需要过段时间就反复研读，每一章可以进行独立阅读

	先认真学习场景问题和解决方案。切实掌握每个模式标准的结构、实现和基本的应用
	（后面较为复杂的内容，可以先跳过，等技术和经验积累到一定程度的时候，在会看并向后学习）
	然后再认真学习模式讲解部分，并结合实际开发经验来思考：如何应用模式来解决实际问题；
	再深入地思考模式的本质和设计思想，掌握模式的精髓（这样才能真正做到自如应用设计模式）

学习路径：1模式名称 --> 2场景问题 --> 3解决方案 --> 4深入学习讲解部分（权衡利弊） --> 5尝试套用设计模式（相似模式比较）
	--> 6总结经验思考是否能变化应用，如组合使用 --> 7会看理论，检验变形使用 --> 8反复循环，螺旋上升（使用、思考、检验）
	
（1）入门级：到第3步后开发中能套用相应的设计模式
（2）掌握级：能进行变形使用（需要了解设计模式的本质）如多个模式组合使用，各取一部分
（3）深入理解和掌握级：吸收精髓，自然而然地应用，如同自己的思维一部分
	
	
注意：过度设计，不要为了设计而设计
	因为怕过度设计而不用设计模式显然是因噎废食。当你认识到自己有过度使用模式的时候，那就明你已意识到问题的存在，
	只有通过不断的钻研和努力，你才能突破"不识庐山真面目，只缘身在此山中"的瓶颈，达到"会当凌绝顶，一览众山小"的境界。


其他技术领域设计模式
	j2ee核心设计模式
	多线程设计模式
	架构模式
	
	
	
========== 各模式本质 ==========

创建型 5个
singleton(单例模式)
	控制实例数量
	懒汉式：是一种典型的时间换空间的方案（多了判断，但缓存了数据）
	饿汉式：是一种典型的空间换时间的方案（一开始就加载）

简单工厂(不是23种内的模式)
	选择实现（在工厂类里）
FactoryMethod(工厂方法模式)
	延迟到子类来选择实现
AbstractFactory(抽象工厂模式)
	选择产品簇的实现
	
builder(建造者/生成器模式)
	分离整体构建算法和部件构造

prototype(原型/克隆模式)
	克隆生成对象


结构型 7个
facade(外观/门面模式)
	封装交互，简化调用

adapter(适配模式)
	转换匹配，复用功能
	
proxy(代理模式)

composite(组合/混合模式)

flyweight(享元模式)

decorator(装饰模式)

bridge(桥接模式)



行为型 11个
mediator(中介者模式)

observer(观察者模式)

command(命令模式)

iterator(迭代器模式)

template(模板方法模式)

strategy(策略模式)

state(状态模式)

memento(备忘录模式)

interpreter(解释器模式)

chain of responsibility(责任链模式)

visitor(访问者模式)






	